services:
  coin-sql:
    container_name: coin-sql
    image: mysql:8
    ports:
      - "3307:3306"
    env_file:
      - ./.env
    environment:
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_AUTH_PLUGIN=caching_sha2_password
      - TZ=Asia/Seoul
    command:
      # - --default-authentication-plugin=caching_sha2_password
      - --collation-server=utf8mb4_unicode_ci
      - --character-set-server=utf8mb4
      - --lower_case_table_names=1
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
        test: ['CMD-SHELL', 'mysqladmin ping -h 127.0.0.1 -u root --password=$$MYSQL_ROOT_PASSWORD']
        interval: 10s
        timeout: 2s
        retries: 100
    networks:
      - kafka-network

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"  # MinIO 콘솔 포트
    environment:
      MINIO_ROOT_USER: "minioadmin"
      MINIO_ROOT_PASSWORD: "minioadmin"
    command: server /data --console-address ":9001"
    volumes:
      - ./minio-data:/data  # 호스트와 마운트된 디렉토리
    restart: always
    networks:
        - kafka-network

  minio-console:
    image: minio/mc
    container_name: minio-console
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (mc alias set myminio http://minio:9000 minioadmin minioadmin) do sleep 5; done;
      mc mb myminio/mybucket;
      mc policy set public myminio/mybucket"
    networks:
        - kafka-network


networks:
  kafka-network:
    external: true

volumes:
  mysql_data: {}
  minio-data:
